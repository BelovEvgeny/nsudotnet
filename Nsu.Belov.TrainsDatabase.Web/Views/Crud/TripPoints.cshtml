@using Nsu.Belov.TrainsDatabase.Web.Models
@using Reinforced.Lattice.CellTemplating
@using Reinforced.Lattice.Commands
@using Reinforced.Lattice.Configuration
@using Reinforced.Lattice.Editing.Editors.PlainText
@using Reinforced.Lattice.Editing.Form
@using Reinforced.Lattice.Filters
@using Reinforced.Lattice.Filters.Value
@using Reinforced.Lattice.Mvc
@using Reinforced.Lattice.Plugins.Ordering
@using Reinforced.Lattice.Plugins.Toolbar
@using Reinforced.Lattice.Templates
@model Nsu.Belov.TrainsDatabase.Web.Models.CrudViewModels.TripPointViewModel

@{
    ViewBag.Title = "TripPoints";
    var conf = Model.Configurator;
    conf.Column(x => x.ArrivalTime).Format("`parseDateTime({#})`");
    conf.Column(x => x.DepartureTime).Format("`parseDateTime({#})`");
    conf.EditingForm(f =>
    {
        f.EditPlainText(x => x.TripId);
        f.EditPlainText(x => x.StationOrder);
        f.EditPlainText(x => x.ArrivalTime);
        f.EditPlainText(x => x.DepartureTime);
        f.EditPlainText(x => x.FirstClassSeats);
        f.EditPlainText(x => x.SecondClassSeats);
        f.RenderTo("#ltcModal");
    }, c => c.Event("click").Selector("._beginEdit"));
    conf.Toolbar("toolbar-rt", x => { x.AddSimpleButton("Add new").AddNewByForm(); });
    conf.AddUiColumn<string>("Actions")
        .Razor(@<div>
                   <button class="btn btn-xs btn-warning _beginEdit">
                       <span class="glyphicon glyphicon-pencil"></span>
                   </button>
                   <button class="btn btn-xs btn-danger _remove">
                       <span class="glyphicon glyphicon-remove"></span>
                   </button>
               </div>)
        .SubscribeCellEvent(x => x.Command("click", "Remove").Selector("._remove"));
    conf.Command("Remove", x => x.ConfigureRemoval());

    conf.Column(x => x.TripId).Orderable(x => x.TripId, ui => ui.UseClientOrdering());
    conf.Column(x => x.StationOrder).Orderable(x => x.StationOrder, ui => ui.UseClientOrdering());

    conf.Column(x => x.TripId).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.StationOrder).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.ArrivalTime).FilterValueUi(ui => ui.CompareOnlyDates().ClientFiltering());
    conf.Column(x => x.DepartureTime).FilterValueUi(ui => ui.CompareOnlyDates().ClientFiltering());
    conf.Column(x => x.FirstClassSeats).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.SecondClassSeats).FilterValueUi(ui => ui.ClientFiltering());
  
}

<h2>TripPoints</h2>

<div id="table"></div>

@section scripts {
    @{ Html.RenderPartial("DeleteTemplate"); }
    @* Render our templates *@
    @{ Html.RenderTemplates("lt", "Lattice_Templates_Bootstrap"); }

    @* Instantiate our table and put it to JS window.$$table variable *@
    @Model.Configurator.InitializationScript("table", "window.$$table")
}
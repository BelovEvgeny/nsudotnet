@using Nsu.Belov.TrainsDatabase.Web.Models
@using Reinforced.Lattice.CellTemplating
@using Reinforced.Lattice.Commands
@using Reinforced.Lattice.Configuration
@using Reinforced.Lattice.Editing.Editors.PlainText
@using Reinforced.Lattice.Editing.Form
@using Reinforced.Lattice.Filters
@using Reinforced.Lattice.Filters.Range
@using Reinforced.Lattice.Filters.Value
@using Reinforced.Lattice.Mvc
@using Reinforced.Lattice.Plugins.Toolbar
@using Reinforced.Lattice.Templates
@model Nsu.Belov.TrainsDatabase.Web.Models.CrudViewModels.TripEditViewModel

@{
    ViewBag.Title = "Расписание поездок";
    var conf = Model.Configurator;
    conf.Column(x => x.RouteId)
        .Razor(@<a href="@Url.Action("RoutePointsForRoute", "Crud", new {routeId = "{RouteId}"})">{RouteId}</a>);

    conf.Column(x => x.RouteName)
        .Razor(@<a href="@Url.Action("RoutePointsForRoute", "Crud", new {routeId = "{RouteId}"})">{RouteName}</a>);
    conf.Column(x => x.DepatrureDate).Format("`parseDateTime({#})`");
    conf.Column(x => x.ArrivalDate).Format("`parseDateTime({#})`");
    conf.EditingForm(f =>
    {
        f.EditPlainText(x => x.RouteName);
        f.EditPlainText(x => x.DepatrureDate);
        f.RenderTo("#ltcModal");
    }, c => c.Event("click").Selector("._beginEdit"));
    conf.Toolbar("toolbar-rt", x => { x.AddSimpleButton("Add new").AddNewByForm(); });
    conf.AddUiColumn<string>("Actions")
        .Razor(@<div>
                   <button class="btn btn-xs btn-warning _beginEdit">
                       <span class="glyphicon glyphicon-pencil"></span>
                   </button>
                   <button class="btn btn-xs btn-danger _remove">
                       <span class="glyphicon glyphicon-remove"></span>
                   </button>
               </div>)
        .SubscribeCellEvent(x => x.Command("click", "Remove").Selector("._remove"))
        ;
    conf.Command("Remove", x => x.ConfigureRemoval());

    conf.Column(x => x.TripId).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.TrainId).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.RouteId).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.RouteName).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.DepatrureStationName).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.DepatrureDate).FilterValueUi(ui => ui.CompareOnlyDates().ClientFiltering());
    conf.Column(x => x.ArrivalStationName).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(x => x.ArrivalDate).FilterValueUi(ui => ui.CompareOnlyDates().ClientFiltering());
}

<h2>Маршруты</h2>
<div id="table"></div>
@section scripts {
    @{ Html.RenderPartial("DeleteTemplate"); }
    @* Render our templates *@
    @{ Html.RenderTemplates("lt", "Lattice_Templates_Bootstrap"); }

    @* Instantiate our table and put it to JS window.$$table variable *@
    @Model.Configurator.InitializationScript("table", "window.$$table")
}